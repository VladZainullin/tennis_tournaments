# Generated by Django 4.2.7 on 2023-12-21 12:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': ('Организатор',),
                'verbose_name_plural': 'Организаторы',
                'db_table': 'organizer',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('surname', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('patronymic', models.CharField(max_length=50, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': ('Игрок',),
                'verbose_name_plural': 'Игроки',
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('surname', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('patronymic', models.CharField(max_length=50, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': ('Судья',),
                'verbose_name_plural': 'Судьи',
                'db_table': 'referees',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Наименование')),
                ('description', models.CharField(max_length=400, verbose_name='Описание')),
                ('player_count', models.IntegerField(verbose_name='Кол-во игроков')),
                ('referee_count', models.IntegerField(verbose_name='Кол-во судей')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.organizer', verbose_name='Организатор')),
            ],
            options={
                'verbose_name': ('Турнир',),
                'verbose_name_plural': 'Турниры',
                'db_table': 'tournament',
            },
        ),
        migrations.CreateModel(
            name='TournamentReferee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.referee', verbose_name='Судья')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.tournament', verbose_name='Турнир')),
            ],
            options={
                'verbose_name': ('Судья партии',),
                'verbose_name_plural': 'Судьи партий',
                'db_table': 'tournament_referees',
            },
        ),
        migrations.CreateModel(
            name='TournamentPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.player', verbose_name='Игрок')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.tournament', verbose_name='Турнир')),
            ],
            options={
                'verbose_name': ('Участник турнира',),
                'verbose_name_plural': 'Участники турнира',
                'db_table': 'tournament_players',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_player', to='tournaments.player', verbose_name='Первый игрок')),
                ('second_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_player', to='tournaments.player', verbose_name='Второй игрок')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.tournament', verbose_name='Турнир')),
            ],
            options={
                'verbose_name': ('Партия',),
                'verbose_name_plural': 'Партии',
                'db_table': 'games',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=256, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('organizer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizer', to='tournaments.organizer')),
                ('player', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player', to='tournaments.player')),
                ('referee', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referee', to='tournaments.referee')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'users',
            },
        ),
    ]
